<Window x:Class="KalymnosBT.Views.IssueDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KalymnosBT.Views"
        mc:Ignorable="d"
        xmlns:designData="clr-namespace:KalymnosBT.DesignData"
        xmlns:models="clr-namespace:KalymnosBT.Models"
        xmlns:viewModels="clr-namespace:KalymnosBT.ViewModels"
        xmlns:settings="clr-namespace:KalymnosBT.Settings"
        WindowState="{Binding Source={x:Static settings:DesktopSettings.Default}, Path=IssueWindowState, Mode=TwoWay}"
        Top="{Binding Source={x:Static settings:DesktopSettings.Default}, Path=IssueWindowTopPosition, Mode=TwoWay}"
        Left="{Binding Source={x:Static settings:DesktopSettings.Default}, Path=IssueWindowLeftPosition, Mode=TwoWay}"
        Height="{Binding Source={x:Static settings:DesktopSettings.Default}, Path=IssueWindowHeight, Mode=TwoWay}" 
        Width="{Binding Source={x:Static settings:DesktopSettings.Default}, Path=IssueWindowWidth, Mode=TwoWay}"
        d:DataContext="{d:DesignInstance designData:SampleIssueDetailsViewModel, IsDesignTimeCreatable=True}"
        d:DesignWidth="800"
        d:DesignHeight="550"
        ContentRendered="OnWindowContentRendered"
        Closing="OnWindowClosing"
        Title="{Binding Model.DisplayId}">
    <Window.Resources>
        <viewModels:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <models:IssueStatusToStringConverter x:Key="issueStatusToStringConverter" />
        <DataTemplate x:Key="commentTemplate">
            <Grid>
                <Grid.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.EditCommentCommand}" />
                </Grid.InputBindings>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <DockPanel>
                    <TextBlock Text="@ " FontWeight="Bold"/>
                    <TextBlock FontWeight="Bold" Text="{Binding Date, StringFormat=d }" />
                    <TextBlock FontWeight="Bold" Text=":"></TextBlock>
                </DockPanel>
                <TextBlock Grid.Row="1" Text="{Binding Text}" TextWrapping="WrapWithOverflow"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="votesTemplate">
            <DockPanel HorizontalAlignment="Stretch">
                <DockPanel.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.EditVoteCommand}" />
                </DockPanel.InputBindings>
                <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                <TextBlock Text="&lt;"/>
                <TextBlock Text="{Binding Email}" />
                <TextBlock Text="&gt;"/>
                </DockPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition x:Name="detailsGridColumn" Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Path Margin="2" Height="16" Data="{StaticResource IconIssue}" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"/>
        <DockPanel HorizontalAlignment="Stretch" Grid.Column="1">
            <TextBlock Text="{Binding Model.Project.Prefix}" Margin="5 5 0 5" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" />
            <TextBlock Text="-" Margin="0 5 0 5" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" />
            <TextBox MinWidth="30" Margin="0 5 5 5" Text="{Binding Model.IssueId, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="16" VerticalContentAlignment="Center" Padding="10 0" />
            <TextBox Margin="5" Text="{Binding Model.Title, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" AcceptsReturn="True"/>
        </DockPanel>

        <StackPanel Grid.Row="1" Margin="2 5 2 2">
            <ToggleButton Margin="2" Padding="5" Background="Transparent" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" ToolTip="Mark starred" IsChecked="{Binding Model.Starred, Mode=TwoWay}">
                <Path Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform">
                    <Path.Style>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Data" Value="{StaticResource IconStarEmpty}"/>
                            <Setter Property="Fill" Value="DarkGray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                    <Setter Property="Data" Value="{StaticResource IconStarFilled}"/>
                                    <Setter Property="Fill" Value="DarkGoldenrod"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </ToggleButton>

            <ToggleButton Margin="2" Padding="5" Background="Transparent" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" ToolTip="Mark as important" IsChecked="{Binding Model.Important, Mode=TwoWay}">
                <Path Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform">
                    <Path.Style>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Data" Value="{StaticResource IconExclamation}"/>
                            <Setter Property="Fill" Value="DarkGray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                    <Setter Property="Fill" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </ToggleButton>

            <ToggleButton Margin="2" Padding="5" Background="Transparent" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" ToolTip="In the Backlog" IsChecked="{Binding IsOriginalIssueBackloged, Mode=TwoWay}">
                <Path Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform">
                    <Path.Style>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Data" Value="{StaticResource IconPin}"/>
                            <Setter Property="Fill" Value="DarkGray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                    <Setter Property="Fill" Value="DarkGreen"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </ToggleButton>
        </StackPanel>
        
        <TextBox Text="{Binding Model.Details, UpdateSourceTrigger=PropertyChanged}" Margin="5" Grid.Row="1" Grid.Column="1" SpellCheck.IsEnabled="True" TextWrapping="Wrap" AcceptsReturn="True" />

        <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Left">
            <TextBlock Text="Created: " Margin="5 2 2 2" VerticalAlignment="Center"/>
            <DatePicker Text="{Binding Model.Created, Mode=TwoWay}" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="Modified: " Margin="5 2 2 2" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Model.Modified, StringFormat=d}" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="Status: " Margin="15 2 2 2" VerticalAlignment="Center"/>
            <ComboBox SelectedItem="{Binding CurrentStatus, Mode=TwoWay}" ItemsSource="{Binding IssueStatusSecection, Mode=OneWay}" VerticalAlignment="Center" Margin="0,10,0,6">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource issueStatusToStringConverter}}" VerticalAlignment="Center"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <GridSplitter Grid.Column="2" Grid.RowSpan="2" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center" />

        <Grid Grid.Column="3" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Comments:"  />
                    <Button Margin="25 0 0 0" Command="{Binding AddCommentCommand}"  BorderThickness="0" Background="Transparent" ToolTip="New comment...">
                        <Button.Content>
                            <Path Data="{StaticResource IconCircleAdd}" Height="16" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" />
                        </Button.Content>
                    </Button>
                </StackPanel>
                <ListBox Grid.Row="1" ItemsSource="{Binding Model.Comments}" SelectedItem="{Binding SelectedComment, Mode=OneWayToSource}" ItemTemplate="{StaticResource commentTemplate}" BorderThickness="0" />
            </Grid>
            
            <Grid Grid.Row="1" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Votes:" />
                    <Button Margin="25 0 0 0" Command="{Binding AddVoteCommand}" BorderThickness="0" Background="Transparent" ToolTip="New vote...">
                        <Button.Content>
                            <Path Data="{StaticResource IconCircleAdd}" Height="16" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" />
                        </Button.Content>
                    </Button>
                </StackPanel>
                <ListBox Grid.Row="1" ItemsSource="{Binding Model.Votes}" ItemTemplate="{StaticResource votesTemplate}" SelectedItem="{Binding SelectedVote, Mode=OneWayToSource}" BorderThickness="0" />
            </Grid>
        </Grid>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3">
            <Button Margin="5" Padding="5" Content="Save" Click="OnBtnSave"/>
            <Button Margin="5" Padding="5" Content="Cancel" IsCancel="True"/>
            <Button x:Name="btnDelete" HorizontalAlignment="Right" Margin="45 5 5 5" Padding="5" Click="OnBtnDelete" Background="Transparent" BorderThickness="0" ToolTip="{Binding DeleteBtnTooltip}" Visibility="{Binding IsEditing, Converter={StaticResource boolToVisibilityConverter}}">
                <Path Data="{StaticResource IconDelete}" Height="16" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"/>
            </Button>
            <Button x:Name="btnRecover" HorizontalAlignment="Right" Margin="0 5 5 5" Padding="5" Click="OnBtnRestore" Background="Transparent" BorderThickness="0" ToolTip="Restore from trash" Visibility="{Binding IsTrashed, Converter={StaticResource boolToVisibilityConverter}}">
                <Path Data="{StaticResource IconRecover}" Height="16" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"/>
            </Button>

        </StackPanel>
    </Grid>
</Window>

